# Generated by Django 2.2.18 on 2021-03-25 15:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
        ('qdjango', '0073_project_is_locked'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('constraint_layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constraint_layer', to='qdjango.Layer')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editing_layer', to='qdjango.Layer')),
            ],
            options={
                'verbose_name': 'Layer geoconstraint',
                'verbose_name_plural': 'Layer geoconstraints',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoConstraintRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.TextField(max_length=255, verbose_name='SQL WHERE clause for the constraint layer')),
                ('constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdjango.GeoConstraint')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Geoconstraint rule',
                'verbose_name_plural': 'Geoconstraint rules',
                'managed': True,
                'unique_together': {('constraint', 'group', 'rule'), ('constraint', 'user', 'rule')},
            },
        ),
    ]
