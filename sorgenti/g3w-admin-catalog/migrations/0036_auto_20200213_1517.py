# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2020-02-13 15:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0035_auto_20200129_1637'),
    ]

    operations = [
        migrations.AlterField(
            model_name='catalog',
            name='contact_address',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact address'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_city',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact city'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_country',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact country'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_email',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact email'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_fax',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contect fax'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_hours',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact hours'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_instructions',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact instructions'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_name',
            field=models.CharField(blank=True, help_text='Contact name and surename', max_length=255, null=True, verbose_name='Contact name'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_phone',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contect phone'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_position',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact position'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_postalcode',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact postalcode'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_role',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact role'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_stateorprovince',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact state/province'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='contact_url',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact URL'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='group',
            field=models.ForeignKey(blank=True, help_text='Group (serves a single group). This field is ignored unless catalog application level is "Group"', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Group'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='identification_abstract',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Identification abstract'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='identification_accessconstraints',
            field=models.CharField(blank=True, help_text='Text description for other constraints', max_length=255, null=True, verbose_name='Identification access contraints'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='identification_fees',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Identification fees'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='identification_keywords',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Identification keywords'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='identification_keywords_type',
            field=models.CharField(blank=True, help_text='From keyword type as per the ISO 19115 MD_KeywordTypeCode codelist). Typical values are: discipline, temporal, place, theme, stratum', max_length=255, null=True, verbose_name='Identification keywords type'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='identification_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Identification title'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_conformity_service',
            field=models.CharField(blank=True, choices=[('conformant', 'conformant'), ('notConformant', 'notConformant'), ('notEvaluated', 'notEvaluated')], help_text='the level of INSPIRE conformance for spatial data sets and services (conformant, notConformant, notEvaluated)', max_length=20, null=True, verbose_name='2.1.5.4 Conformity: INSPIRE rif'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_contact_email',
            field=models.CharField(blank=True, help_text='the email address of entity responsible for the INSPIRE/RNDT metadata', max_length=255, null=True, verbose_name='2.1.2.10 Contact point: emai'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_contact_organization',
            field=models.CharField(blank=True, help_text='the organization name responsible for the INSPIRE/RNDT metadata', max_length=255, null=True, verbose_name='2.1.2.10 Contact point: organization'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_contact_phone',
            field=models.CharField(blank=True, help_text='the telephone number of entity responsible for the INSPIRE/RNDT metadata', max_length=255, null=True, verbose_name='2.1.2.10 Contact point: phone'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_contact_url',
            field=models.CharField(blank=True, help_text='the URL of entity responsible for the INSPIRE/RNDT metadata', max_length=255, null=True, verbose_name='2.1.2.10 Contact point: URL'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_date',
            field=models.DateField(blank=True, help_text='date of INSPIRE metadata offering (in ISO 8601 format), maps to dateStamp', null=True, verbose_name='2.1.1.7 INSPIRE date'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_default_language',
            field=models.CharField(blank=True, choices=[('bul', 'bul'), ('cze', 'cze'), ('dan', 'dan'), ('dut', 'dut'), ('eng', 'eng'), ('est', 'est'), ('fin', 'fin'), ('fre', 'fre'), ('ger', 'ger'), ('gre', 'gre'), ('hun', 'hun'), ('gle', 'gle'), ('ita', 'ita'), ('lav', 'lav'), ('lit', 'lit'), ('mlt', 'mlt'), ('pol', 'pol'), ('por', 'por'), ('rum', 'rum'), ('slo', 'slo'), ('slv', 'slv'), ('spa', 'spa'), ('swe', 'swe')], default='ita', help_text='3 letter code of the default language (see http://inspire.ec.europa.eu/schemas/common/1.0/enums/enum_eng.xsd, simpleType euLanguageISO6392B)', max_length=255, null=True, verbose_name='2.1.1.2 INSPIRE default language'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_enabled',
            field=models.BooleanField(default=False, help_text='whether to enable the INSPIRE extension', verbose_name='Metadata INSPIRE activation'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_gemet_keywords',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Addresses', 'Addresses'), ('Administrative units', 'Administrative units'), ('Agricultural and aquaculture facilities', 'Agricultural and aquaculture facilities'), ('Area management/restriction/regulation zones and reporting units', 'Area management/restriction/regulation zones and reporting units'), ('Atmospheric conditions', 'Atmospheric conditions'), ('Bio-geographical regions', 'Bio-geographical regions'), ('Buildings', 'Buildings'), ('Cadastral parcels', 'Cadastral parcels'), ('Coordinate reference systems', 'Coordinate reference systems'), ('Elevation', 'Elevation'), ('Energy resources', 'Energy resources'), ('Environmental monitoring facilities', 'Environmental monitoring facilities'), ('Geographical grid systems', 'Geographical grid systems'), ('Geographical names', 'Geographical names'), ('Geology', 'Geology'), ('Habitats and biotopes', 'Habitats and biotopes'), ('Human health and safety', 'Human health and safety'), ('Hydrography', 'Hydrography'), ('Land cover', 'Land cover'), ('Land use', 'Land use'), ('Meteorological geographical features', 'Meteorological geographical features'), ('Mineral resources', 'Mineral resources'), ('Natural risk zones', 'Natural risk zones'), ('Oceanographic geographical features', 'Oceanographic geographical features'), ('Orthoimagery', 'Orthoimagery'), ('Population distribution \u2014 demography', 'Population distribution \u2014 demography'), ('Production and industrial facilities', 'Production and industrial facilities'), ('Protected sites', 'Protected sites'), ('Sea regions', 'Sea regions'), ('Soil', 'Soil'), ('Species distribution', 'Species distribution'), ('Statistical units', 'Statistical units'), ('Transport networks', 'Transport networks'), ('Utility and governmental services', 'Utility and governmental services')], help_text='a comma-seperated keyword list of GEMET INSPIRE theme keywords about the service (see http://inspire.ec.europa.eu/schemas/common/1.0/enums/enum_eng.xsd, complexType inspireTheme_eng)', max_length=1024, null=True, verbose_name='INPIRE gemet keywords'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_geographical_extent',
            field=models.CharField(blank=True, help_text='Space separated values of lon/lat (west south east north)', max_length=255, null=True, verbose_name='INSPIRE geographical extent'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_languages_supported',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('bul', 'bul'), ('cze', 'cze'), ('dan', 'dan'), ('dut', 'dut'), ('eng', 'eng'), ('est', 'est'), ('fin', 'fin'), ('fre', 'fre'), ('ger', 'ger'), ('gre', 'gre'), ('hun', 'hun'), ('gle', 'gle'), ('ita', 'ita'), ('lav', 'lav'), ('lit', 'lit'), ('mlt', 'mlt'), ('pol', 'pol'), ('por', 'por'), ('rum', 'rum'), ('slo', 'slo'), ('slv', 'slv'), ('spa', 'spa'), ('swe', 'swe')], default='ita', help_text='list of comma separated 3 letter codes of supported languages (see http://inspire.ec.europa.eu/schemas/common/1.0/enums/enum_eng.xsd, simpleType euLanguageISO6392B)', max_length=255, null=True, verbose_name='INSPIRE languages supported'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='inspire_temp_extent',
            field=models.CharField(blank=True, help_text='temporal extent of the service (in ISO 8601 format). Either a single date (i.e. yyyy-mm-dd), or an extent (i.e. yyyy-mm-dd/yyyy-mm-dd)', max_length=255, null=True, verbose_name='INSPIRE temporal extent'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='macrogroup',
            field=models.ForeignKey(blank=True, help_text='Macrogroup (serves a macrogroup). This field is ignored unless scope is "MacroGroup"', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.MacroGroup'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='provider_name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Provider name'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='provider_url',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Provider url'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='rndt_codice_ipa',
            field=models.CharField(help_text='RNDT: codice iPA amministrazione, parte di fileIdentifier', max_length=32, verbose_name='RNDT codice iPA amministrazione'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='rndt_enabled',
            field=models.BooleanField(default=False, help_text='whether to enable the RNDT extension', verbose_name='RNDT metadata activation'),
        ),
        migrations.AlterField(
            model_name='catalog',
            name='scope',
            field=models.CharField(choices=[('GLOBAL', 'Global (serves all projects)'), ('GROUP', 'Group (serves a single group)'), ('MACROGROUP', 'Macrogroup (serves a macrogroup)')], default='GLOBAL', help_text='Catalog application scope-level', max_length=50, verbose_name='Catalog application level'),
        ),
        migrations.AlterField(
            model_name='record',
            name='abstract',
            field=models.TextField(blank=True, help_text='2.1.2.8 Abstract data description', null=True, verbose_name='2.1.2.8 Abstract'),
        ),
        migrations.AlterField(
            model_name='record',
            name='access_constraints',
            field=models.TextField(blank=True, help_text='Maps to pycsw:AccessConstraints', null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='accuracy',
            field=models.FloatField(default=1.0, help_text='2.1.5.2 Positional accuracy in meters', verbose_name='2.1.5.2 Positional accuracy'),
        ),
        migrations.AlterField(
            model_name='record',
            name='bounding_box',
            field=models.TextField(blank=True, help_text='2.1.4.1 Data bounding box. Automatically calculated from layer', null=True, verbose_name='2.1.4.1 Bounding box'),
        ),
        migrations.AlterField(
            model_name='record',
            name='creation_date',
            field=models.DateField(auto_now_add=True, help_text='2.1.2.2 Data creation date', null=True, verbose_name='2.1.2.2 Creation date'),
        ),
        migrations.AlterField(
            model_name='record',
            name='crs',
            field=models.CharField(blank=True, help_text='2.1.6.1 Data Coordinate reference system', max_length=255, null=True, verbose_name='2.1.6.1 Coordinate reference system'),
        ),
        migrations.AlterField(
            model_name='record',
            name='denominator',
            field=models.IntegerField(default=1000, help_text='2.1.2.13 General density data factor', verbose_name='2.1.2.13 Spatial resolution'),
        ),
        migrations.AlterField(
            model_name='record',
            name='distance_uom',
            field=models.CharField(blank=True, editable=False, help_text='2.1.2.13 Risoluzione spaziale- Maps to pycsw:DistanceUOM', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='distance_value',
            field=models.CharField(blank=True, editable=False, help_text='2.1.2.13 Risoluzione spaziale - Maps to pycsw:DistanceValue', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='format',
            field=models.CharField(blank=True, help_text='Description about data format', max_length=50, null=True, verbose_name='2.1.7.1 Distribution format'),
        ),
        migrations.AlterField(
            model_name='record',
            name='identifier',
            field=models.CharField(db_index=True, help_text='2.1.1.1 Identificatore del file - Maps to pycsw:Identifier', max_length=255, verbose_name='ID value'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_contact_email',
            field=models.CharField(blank=True, help_text='2.1.1.6 Responsabile dei metadati - the email address of entity responsible for the INSPIRE/RNDT metadata, inherited from catalog if left blank', max_length=255, null=True, verbose_name='inspire_contact_email'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_contact_organization',
            field=models.CharField(blank=True, help_text='2.1.1.6 Responsabile dei metadati - the organization name responsible for the INSPIRE/RNDT metadata, inherited from catalog if left blank', max_length=255, null=True, verbose_name='inspire_contact_organization'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_contact_phone',
            field=models.CharField(blank=True, help_text='2.1.1.6 Responsabile dei metadati - the telephone number of entity responsible for the INSPIRE/RNDT metadata, inherited from catalog if left blank', max_length=255, null=True, verbose_name='inspire_contact_phone'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_contact_url',
            field=models.CharField(blank=True, help_text='2.1.1.6 Responsabile dei metadati - the URL of entity responsible for the INSPIRE/RNDT metadata, inherited from catalog if left blank', max_length=255, null=True, verbose_name='inspire_contact_url'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_owner_contact_email',
            field=models.CharField(blank=True, help_text='2.1.2.4 Responsabile - the email address of the owner, inherited from catalog if left blank', max_length=255, null=True, verbose_name='INSPIRE owner contact email'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_owner_contact_organization',
            field=models.CharField(blank=True, help_text='2.1.2.4 Responsabile - INSPIRE the organization name of the owner, inherited from catalog if left blank', max_length=255, null=True, verbose_name='INSPIRE owner contact organization'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_owner_contact_phone',
            field=models.CharField(blank=True, help_text='2.1.2.4 Responsabile - the telephone number of the owner, inherited from catalog if left blank', max_length=255, null=True, verbose_name='INSPIRE owner contact phone'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_owner_contact_url',
            field=models.CharField(blank=True, help_text='2.1.2.4 Responsabile - the URL of the owner, inherited from catalog if left blank', max_length=255, null=True, verbose_name='INSPIRE owner contact url'),
        ),
        migrations.AlterField(
            model_name='record',
            name='inspire_use_limitation',
            field=models.TextField(blank=True, help_text='2.1.3.1 Use limitation - Restrictions on data usage and access, inherited from catalog - No conditions apply - if left blank', null=True, verbose_name='2.1.3.1 Use limitation'),
        ),
        migrations.AlterField(
            model_name='record',
            name='keywords',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Addresses', 'Addresses'), ('Administrative units', 'Administrative units'), ('Agricultural and aquaculture facilities', 'Agricultural and aquaculture facilities'), ('Area management/restriction/regulation zones and reporting units', 'Area management/restriction/regulation zones and reporting units'), ('Atmospheric conditions', 'Atmospheric conditions'), ('Bio-geographical regions', 'Bio-geographical regions'), ('Buildings', 'Buildings'), ('Cadastral parcels', 'Cadastral parcels'), ('Coordinate reference systems', 'Coordinate reference systems'), ('Elevation', 'Elevation'), ('Energy resources', 'Energy resources'), ('Environmental monitoring facilities', 'Environmental monitoring facilities'), ('Geographical grid systems', 'Geographical grid systems'), ('Geographical names', 'Geographical names'), ('Geology', 'Geology'), ('Habitats and biotopes', 'Habitats and biotopes'), ('Human health and safety', 'Human health and safety'), ('Hydrography', 'Hydrography'), ('Land cover', 'Land cover'), ('Land use', 'Land use'), ('Meteorological geographical features', 'Meteorological geographical features'), ('Mineral resources', 'Mineral resources'), ('Natural risk zones', 'Natural risk zones'), ('Oceanographic geographical features', 'Oceanographic geographical features'), ('Orthoimagery', 'Orthoimagery'), ('Population distribution \u2014 demography', 'Population distribution \u2014 demography'), ('Production and industrial facilities', 'Production and industrial facilities'), ('Protected sites', 'Protected sites'), ('Sea regions', 'Sea regions'), ('Soil', 'Soil'), ('Species distribution', 'Species distribution'), ('Statistical units', 'Statistical units'), ('Transport networks', 'Transport networks'), ('Utility and governmental services', 'Utility and governmental services')], help_text='2.1.2.9 Record keywords - a comma-seperated keyword list of GEMET INSPIRE theme keywords about the service (see http://inspire.ec.europa.eu/schemas/common/1.0/enums/enum_eng.xsd, complexType inspireTheme_eng)', max_length=1024, verbose_name='INSPIRE GEMET keywords'),
        ),
        migrations.AlterField(
            model_name='record',
            name='language',
            field=models.CharField(blank=True, choices=[('bul', 'bul'), ('cze', 'cze'), ('dan', 'dan'), ('dut', 'dut'), ('eng', 'eng'), ('est', 'est'), ('fin', 'fin'), ('fre', 'fre'), ('ger', 'ger'), ('gre', 'gre'), ('hun', 'hun'), ('gle', 'gle'), ('ita', 'ita'), ('lav', 'lav'), ('lit', 'lit'), ('mlt', 'mlt'), ('pol', 'pol'), ('por', 'por'), ('rum', 'rum'), ('slo', 'slo'), ('slv', 'slv'), ('spa', 'spa'), ('swe', 'swe')], default='eng', help_text='2.1.1.2 Metadata Language', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='lineage',
            field=models.TextField(blank=True, help_text='2.1.5.3 Descriptive text about process history and/or general quality of data', null=True, verbose_name='2.1.5.3 Lineage'),
        ),
        migrations.AlterField(
            model_name='record',
            name='modified_date',
            field=models.DateField(auto_now_add=True, help_text='2.1.2.2 Data - Maps to pycsw:Modified', null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='other_constraints',
            field=models.TextField(blank=True, help_text='Maps to pycsw:OtherConstraints', null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='publication_date',
            field=models.DateField(auto_now_add=True, help_text='2.1.2.2 Data publication date', null=True, verbose_name='2.1.2.2 Publication date'),
        ),
        migrations.AlterField(
            model_name='record',
            name='resource_language',
            field=models.CharField(blank=True, help_text='2.1.2.14 Language used for data - inherited from catalog if left blank', max_length=30, null=True, verbose_name='2.1.2.14 Language'),
        ),
        migrations.AlterField(
            model_name='record',
            name='revision_date',
            field=models.DateField(auto_now_add=True, help_text='2.1.2.2 Data revision date', null=True, verbose_name='2.1.2.2 Revision date'),
        ),
        migrations.AlterField(
            model_name='record',
            name='rndt_distributor_contact_email',
            field=models.CharField(blank=True, help_text='2.1.7.2 Data distributor - the email address of the distributor, inherited from catalog if left blank', max_length=255, null=True, verbose_name='2.1.7.2 Data distributor: email'),
        ),
        migrations.AlterField(
            model_name='record',
            name='rndt_distributor_contact_organization',
            field=models.CharField(blank=True, help_text='2.1.7.2 Data distributor - RNDT the organization name of the distributor, inherited from catalog if left blank', max_length=255, null=True, verbose_name='2.1.7.2 Data distributor: organization'),
        ),
        migrations.AlterField(
            model_name='record',
            name='rndt_distributor_contact_phone',
            field=models.CharField(blank=True, help_text='2.1.7.2 Data distributor - the telephone number of the distributor, inherited from catalog if left blank', max_length=255, null=True, verbose_name='2.1.7.2 Data distributor: phone'),
        ),
        migrations.AlterField(
            model_name='record',
            name='rndt_distributor_contact_url',
            field=models.CharField(blank=True, help_text='2.1.7.2 Data distributor - the URL of the distributor, inherited from catalog if left blank', max_length=255, null=True, verbose_name='2.1.7.2 data distributor: URL'),
        ),
        migrations.AlterField(
            model_name='record',
            name='security_constraints',
            field=models.CharField(blank=True, help_text='Maps to pycsw:SecurityConstraints', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='record',
            name='temporal_extent_begin',
            field=models.DateTimeField(blank=True, help_text='Start of data average time', max_length=255, null=True, verbose_name='2.1.4.3 Temporal extension: start'),
        ),
        migrations.AlterField(
            model_name='record',
            name='temporal_extent_end',
            field=models.DateTimeField(blank=True, help_text='Start of data average tim', max_length=255, null=True, verbose_name='2.1.4.3 Temporal extension: end'),
        ),
        migrations.AlterField(
            model_name='record',
            name='title',
            field=models.CharField(help_text='2.1.2.1 Title data', max_length=255, null=True, verbose_name='2.1.2.1 Title'),
        ),
        migrations.AlterField(
            model_name='record',
            name='topic_category',
            field=models.CharField(blank=True, choices=[('farming', 'Farming - Rearing of animals and/or cultivation of plants.'), ('biota', 'Biota - Flora and/or fauna in natural environment.'), ('boundaries', 'Boundaries - Legal land descriptions.'), ('climatologyMeteorologyAtmosphere', 'Climatology / Meteorology / Atmosphere - Processes and phenomena of the atmosphere.'), ('economy', 'Economy - Economic activities, conditions and employment.'), ('elevation', 'Elevation - Height above or below sea level.'), ('environment', 'Environment - Environmental resources, protection and conservation.'), ('geoscientificInformation', 'Geoscientific Information - Information pertaining to earth sciences.'), ('health', 'Health, health services, human ecology, and safety.'), ('imageryBaseMapsEarthCover', 'Imagery / Base Maps / Earth Cover.'), ('intelligenceMilitary', 'Intelligence / Military - Military bases, structures, activities.'), ('inlandWaters', 'Inland water features, drainage systems and their characteristics.'), ('location', 'Location - Positional information and services.'), ('oceans', 'Oceans - Features and characteristics of salt water bodies (excluding inland waters).'), ('planningCadastre', 'Planning / Cadastre - Information used for appropriate actions for future use of the land.'), ('society', 'Society - Characteristics of society and cultures.'), ('structure', 'Structure - Man-made construction.'), ('transportation', 'Transportation - Means and aids for conveying persons and/or goods.'), ('utilitiesCommunication', 'Utilities / Communication - Energy, water and waste systems and communications infrastructure and services.')], help_text='2.1.2.15 Main topic data', max_length=255, null=True, verbose_name='2.1.2.15 Topic category'),
        ),
    ]
