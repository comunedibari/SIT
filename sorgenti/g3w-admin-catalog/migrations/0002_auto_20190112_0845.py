# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-01-12 08:45
from __future__ import unicode_literals

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0052_baselayer_icon'),
        ('catalog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name', unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('order', models.IntegerField(default=1, verbose_name='Order')),
                ('scope', models.CharField(choices=[('GLOBAL', 'Global (serves all projects)'), ('GROUP', 'Group (serves a single group)'), ('MACROGROUP', 'Macrogroup (serves a macrogroup)')], default='GLOBAL', max_length=50, verbose_name='Scope')),
                ('identification_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='identification_title')),
                ('identification_abstract', models.CharField(blank=True, max_length=255, null=True, verbose_name='identification_abstract')),
                ('identification_keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='identification_keywords')),
                ('identification_keywords_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='identification_keywords_type')),
                ('identification_fees', models.CharField(blank=True, max_length=255, null=True, verbose_name='identification_fees')),
                ('identification_accessconstraints', models.CharField(blank=True, max_length=255, null=True, verbose_name='identification_accessconstraints')),
                ('provider_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='provider_name')),
                ('provider_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='provider_url')),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_name')),
                ('contact_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_position')),
                ('contact_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_address')),
                ('contact_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_city')),
                ('contact_stateorprovince', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_stateorprovince')),
                ('contact_postalcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_postalcode')),
                ('contact_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_country')),
                ('contact_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_phone')),
                ('contact_fax', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_fax')),
                ('contact_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_email')),
                ('contact_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_url')),
                ('contact_hours', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_hours')),
                ('contact_instructions', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_instructions')),
                ('contact_role', models.CharField(blank=True, max_length=255, null=True, verbose_name='contact_role')),
                ('group', models.ForeignKey(blank=True, help_text='This field is ignored unless scope is "Group"', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Group')),
                ('macro_group', models.ForeignKey(blank=True, help_text='This field is ignored unless scope is "MacroGroup"', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.MacroGroup')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Catalog endpoint',
                'verbose_name_plural': 'Catalog endpoints',
            },
        ),
        migrations.AddField(
            model_name='record',
            name='catalog',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='catalog.Catalog'),
            preserve_default=False,
        ),
    ]
