# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-10-18 07:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('qdjango', '0027_layer_wfscapabilities'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaratteristicheParticella',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_particella', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('edificialita', models.CharField(blank=True, max_length=1, null=True)),
                ('classe', models.CharField(blank=True, max_length=2, null=True)),
                ('ettari', models.IntegerField(blank=True, null=True)),
                ('are', models.IntegerField(blank=True, null=True)),
                ('centiare', models.IntegerField(blank=True, null=True)),
                ('flag_reddito', models.CharField(blank=True, choices=[('0', 'Calcolabile(0)'), ('1', 'Non calcolabile(1)')], max_length=1, null=True)),
                ('flag_porzione', models.CharField(blank=True, choices=[('0', 'Assenti(0)'), ('1', 'Esistenza porzioni(1)')], max_length=1, null=True)),
                ('flag_deduzioni', models.CharField(blank=True, choices=[('0', 'Assenti(0)'), ('1', 'Esistenza deduzioni(1)')], max_length=1, null=True)),
                ('reddito_dominicale', models.IntegerField(blank=True, null=True)),
                ('reddito_agrario', models.IntegerField(blank=True, null=True)),
                ('reddito_dominicale_euro', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
                ('reddito_agrario_euro', models.DecimalField(blank=True, decimal_places=3, max_digits=11, null=True)),
                ('partita', models.CharField(blank=True, max_length=7, null=True)),
                ('annotazione', models.CharField(blank=True, max_length=200, null=True)),
                ('id_mutazionale_iniziale', models.IntegerField(blank=True, null=True)),
                ('id_mutazionale_finale', models.IntegerField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'caratteristiche_particella',
                'verbose_name': 'Caratteristiche particella',
                'verbose_name_plural': 'Caratteristiche particelle',
            },
        ),
        migrations.CreateModel(
            name='CategorieCatastali',
            fields=[
                ('categoria', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('descrizione', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'categorie_catastali',
                'verbose_name': 'Categoria catastale',
                'verbose_name_plural': 'Categorie catastali',
            },
        ),
        migrations.CreateModel(
            name='CodiciDiritto',
            fields=[
                ('codice_diritto', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('descrizione', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'codici_diritto',
                'verbose_name': 'Codice diritto',
                'verbose_name_plural': 'Codici diritto',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cadastre_config_related', to='qdjango.Project')),
            ],
        ),
        migrations.CreateModel(
            name='DatiAtto',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('data_efficacia', models.DateField(blank=True, null=True, verbose_name=b'Data di Efficacia conclusiva')),
                ('data_registrazione', models.DateField(blank=True, null=True, verbose_name=b'Data di registrazione conclusiva')),
                ('tipo_nota', models.CharField(blank=True, max_length=1, null=True)),
                ('numero_nota', models.CharField(blank=True, max_length=6, null=True)),
                ('progressivo_nota', models.CharField(blank=True, max_length=3, null=True)),
                ('anno_nota', models.IntegerField(blank=True, null=True)),
                ('codice_casuale', models.CharField(blank=True, max_length=3, null=True)),
                ('descrizione_casuale', models.CharField(blank=True, max_length=100, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dati_atto',
                'verbose_name': 'Dato atto',
                'verbose_name_plural': 'Dati atto',
            },
        ),
        migrations.CreateModel(
            name='DatiMDOCFA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docfa', models.CharField(max_length=255)),
                ('id_uiu', models.IntegerField()),
                ('codice_comune_uiu', models.CharField(blank=True, max_length=4, null=True)),
                ('progressivo_poligono', models.IntegerField()),
                ('ambiente', models.CharField(max_length=1)),
                ('superficie', models.CharField(max_length=255)),
                ('altezza', models.CharField(max_length=255)),
                ('altezza_max', models.CharField(blank=True, max_length=255, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dati_m_docfa',
                'verbose_name': 'Dato M DOCFA',
                'verbose_name_plural': 'Dati M DOCFA',
            },
        ),
        migrations.CreateModel(
            name='DeduzioniParticella',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_particella', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('simbolo', models.CharField(blank=True, max_length=6, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'deduzioni_particella',
                'verbose_name': 'Deduzione particella',
                'verbose_name_plural': 'Deduzioni particelle',
            },
        ),
        migrations.CreateModel(
            name='DOCFA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocollo', models.CharField(max_length=255)),
                ('path', models.TextField()),
                ('fornitura', models.CharField(max_length=255)),
                ('data_registrazione', models.DateField()),
                ('periodo', models.CharField(max_length=255)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'docfa',
                'verbose_name': 'DOCFA',
                'verbose_name_plural': 'DOCFA',
            },
        ),
        migrations.CreateModel(
            name='IdentificativiImmobiliari',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_immobile', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('sezione_urbana', models.CharField(blank=True, max_length=3, null=True)),
                ('foglio', models.CharField(blank=True, max_length=4, null=True)),
                ('numero', models.CharField(blank=True, max_length=5, null=True)),
                ('denominatore', models.IntegerField(blank=True, null=True)),
                ('subalterno', models.CharField(blank=True, max_length=4, null=True)),
                ('edificialita', models.CharField(blank=True, max_length=1, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'identificativi_immobiliari',
                'verbose_name': 'Identificativo immobiliare',
                'verbose_name_plural': 'Identificativi immobiliari',
            },
        ),
        migrations.CreateModel(
            name='ImportDOCFA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('nome_fornitura', models.CharField(max_length=255)),
                ('codice_comune', models.CharField(max_length=4)),
                ('data_elaborazione', models.DateField()),
                ('n_record', models.IntegerField()),
                ('n_docfa', models.IntegerField()),
                ('n_planimetrie', models.IntegerField()),
                ('file', models.FileField(upload_to=b'docfa_files')),
                ('task_id', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'Import DOCFA',
                'verbose_name_plural': 'Import DOCFA',
            },
        ),
        migrations.CreateModel(
            name='Indirizzi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_immobile', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('toponimo', models.IntegerField(blank=True, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=50, null=True)),
                ('civico_1', models.CharField(blank=True, max_length=6, null=True)),
                ('civico_2', models.CharField(blank=True, max_length=6, null=True)),
                ('civico_3', models.CharField(blank=True, max_length=6, null=True)),
                ('codice_strada', models.IntegerField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'indirizzi',
                'verbose_name': 'Indirizzo',
                'verbose_name_plural': 'Indirizzi',
            },
        ),
        migrations.CreateModel(
            name='Particella',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_particella', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('foglio', models.CharField(blank=True, max_length=4, null=True)),
                ('numero', models.CharField(blank=True, max_length=5, null=True)),
                ('denominatore', models.IntegerField(blank=True, null=True)),
                ('subalterno', models.CharField(blank=True, max_length=4, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'particella',
                'verbose_name': 'Particella',
                'verbose_name_plural': 'Particelle',
            },
        ),
        migrations.CreateModel(
            name='PartiteSpeciali',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('F', b'FAB'), ('T', b'TER')], max_length=1)),
                ('partita', models.CharField(max_length=1)),
                ('descrizione', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'partite_speciali',
                'verbose_name': 'Partita speciale',
                'verbose_name_plural': 'Partite speciali',
            },
        ),
        migrations.CreateModel(
            name='PersonaFisica',
            fields=[
                ('id_soggetto', models.IntegerField(primary_key=True, serialize=False)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('cognome', models.CharField(blank=True, max_length=50, null=True)),
                ('nome', models.CharField(blank=True, max_length=50, null=True)),
                ('sesso', models.CharField(blank=True, choices=[('1', 'Maschio(1)'), ('2', 'Femmina(2)')], max_length=1, null=True)),
                ('data_nascita', models.DateField(blank=True, null=True, verbose_name=b'Data di nascita')),
                ('luogo_nascita', models.CharField(blank=True, max_length=4, null=True, verbose_name=b'Luogo di nascita')),
                ('codice_fiscale', models.CharField(blank=True, max_length=16, null=True)),
                ('indicazioni_supplementari', models.CharField(blank=True, max_length=100, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'persona_fisica',
                'verbose_name': 'Persona fisica',
                'verbose_name_plural': 'Persone fisiche',
            },
        ),
        migrations.CreateModel(
            name='PersonaGiuridica',
            fields=[
                ('id_soggetto', models.IntegerField(primary_key=True, serialize=False)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('denominazione', models.CharField(blank=True, max_length=150, null=True)),
                ('sede', models.CharField(blank=True, max_length=4, null=True)),
                ('codice_fiscale_piva', models.CharField(blank=True, max_length=11, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'persona_giuridica',
                'verbose_name': 'Persona giuridica',
                'verbose_name_plural': 'Persone giuridiche',
            },
        ),
        migrations.CreateModel(
            name='Planimetrie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_file', models.CharField(max_length=255)),
                ('numero', models.IntegerField()),
                ('is_elaborato', models.IntegerField()),
                ('docfa', models.CharField(max_length=255)),
                ('id_uiu', models.IntegerField(blank=True, null=True)),
                ('formato', models.CharField(max_length=255)),
                ('scala', models.CharField(max_length=255)),
                ('path', models.TextField()),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'planimetrie',
                'verbose_name': 'Planimetria',
                'verbose_name_plural': 'Planimetrie',
            },
        ),
        migrations.CreateModel(
            name='PorzioniParticella',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_particella', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('id_porzione', models.CharField(blank=True, max_length=2, null=True)),
                ('classe', models.CharField(blank=True, max_length=2, null=True)),
                ('ettari', models.IntegerField(blank=True, null=True)),
                ('are', models.IntegerField(blank=True, null=True)),
                ('centiare', models.IntegerField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'porzioni_particella',
                'verbose_name': 'Porzione particella',
                'verbose_name_plural': 'Porzioni particelle',
            },
        ),
        migrations.CreateModel(
            name='Prm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('codice_comune', models.CharField(max_length=4)),
                ('tipo_fornitura', models.CharField(max_length=5)),
                ('descrizione', models.CharField(blank=True, max_length=255, null=True)),
                ('is_aggiornamento', models.BooleanField(default=True)),
                ('n_record', models.IntegerField()),
                ('file', models.FileField(upload_to=b'prm_files')),
                ('data_richiesta', models.DateField()),
                ('data_elaborazione', models.DateField()),
                ('data_selezione', models.DateField()),
                ('data_registrazione', models.DateField(blank=True, null=True)),
                ('fogli_estratti', models.CharField(max_length=255)),
                ('task_id', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'PRM',
                'verbose_name_plural': 'PRM',
            },
        ),
        migrations.CreateModel(
            name='QualitaTerreni',
            fields=[
                ('qualita', models.IntegerField(primary_key=True, serialize=False)),
                ('descrizione', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'qualita_terreni',
                'verbose_name': 'Qualit\xe0 terreno',
                'verbose_name_plural': 'Qualit\xe0 terreni',
            },
        ),
        migrations.CreateModel(
            name='RelazioneFabbricatiDOCFA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocollo', models.CharField(blank=True, max_length=255, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('sezione_urbana', models.CharField(blank=True, max_length=3, null=True)),
                ('foglio', models.CharField(blank=True, max_length=4, null=True)),
                ('numero', models.CharField(blank=True, max_length=5, null=True)),
                ('denominatore', models.IntegerField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'relazione_fabbricati_docfa',
                'verbose_name': 'Relazione fabbricati DOCFA',
                'verbose_name_plural': 'Relazioni fabbricati DOCFA',
            },
        ),
        migrations.CreateModel(
            name='RelazioneUiuDOCFA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocollo', models.CharField(max_length=255)),
                ('id_uiu', models.IntegerField()),
                ('codice_comune_uiu', models.CharField(blank=True, max_length=4, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'relazione_uiu_docfa',
                'verbose_name': 'Relazione uiu DOCFA',
                'verbose_name_plural': 'Relazioni uiu DOCFA',
            },
        ),
        migrations.CreateModel(
            name='RiserveParticella',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_particella', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('codice', models.CharField(blank=True, max_length=1, null=True)),
                ('partita', models.CharField(blank=True, max_length=7, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'riserve_particella',
                'verbose_name': 'Riserva particella',
                'verbose_name_plural': 'Riserve particelle',
            },
        ),
        migrations.CreateModel(
            name='RiserveUI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_immobile', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('codice_riserva', models.CharField(blank=True, max_length=1, null=True)),
                ('partita_iscrizione_riserva', models.CharField(blank=True, max_length=7, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'riserve_ui',
                'verbose_name': 'Riserva UI',
                'verbose_name_plural': 'Riserve UI',
            },
        ),
        migrations.CreateModel(
            name='SezioniCensuarie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('F', b'FAB'), ('T', b'TER')], max_length=1)),
                ('provincia', models.CharField(max_length=2)),
                ('codice_comune', models.CharField(max_length=4)),
                ('sezione', models.CharField(max_length=1)),
                ('descrizione', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'sezioni_censuarie',
                'verbose_name': 'Sezione censuaria',
                'verbose_name_plural': 'Sezioni censuarie',
            },
        ),
        migrations.CreateModel(
            name='TipiNota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('F', b'FAB'), ('T', b'TER')], max_length=1)),
                ('nota', models.CharField(max_length=1)),
                ('descrizione', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tipi_nota',
                'verbose_name': 'Tipo nota',
                'verbose_name_plural': 'Tipi nota',
            },
        ),
        migrations.CreateModel(
            name='Titolarita',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_immobile', models.IntegerField(blank=True, null=True)),
                ('id_particella', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('id_soggetto', models.IntegerField()),
                ('titolo_non_codificato', models.CharField(blank=True, max_length=200, null=True)),
                ('quota_numeratore', models.IntegerField(blank=True, null=True)),
                ('quota_denominatore', models.IntegerField(blank=True, null=True)),
                ('regime', models.CharField(blank=True, choices=[('C', 'Comunione(C)'), ('P', 'Bene personale(P)'), ('S', 'In separazione(S)'), ('D', 'In comunione de residuo(D)')], max_length=1, null=True)),
                ('soggetto_riferimento', models.CharField(blank=True, max_length=9, null=True, verbose_name=b'Soggetto di riferimento')),
                ('id_mutazionale_iniziale', models.IntegerField(blank=True, null=True)),
                ('id_mutazionale_finale', models.IntegerField(blank=True, null=True)),
                ('tipo_soggetto', models.CharField(blank=True, choices=[('P', 'Persona fisica(F)'), ('G', 'Persona giuridica(G)')], max_length=1, null=True)),
                ('tipo_fornitura', models.CharField(max_length=1)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('codice_diritto', models.ForeignKey(db_column='codice_diritto', on_delete=django.db.models.deletion.CASCADE, to='cadastre.CodiciDiritto')),
                ('sezione', models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie')),
            ],
            options={
                'db_table': 'titolarita',
                'verbose_name': 'Titolarit\xe0',
                'verbose_name_plural': 'Titolarit\xe0',
            },
        ),
        migrations.CreateModel(
            name='UnitaImmobiliare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_immobile', models.IntegerField()),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('zona', models.CharField(blank=True, max_length=3, null=True)),
                ('classe', models.CharField(blank=True, max_length=2, null=True)),
                ('consistenza', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('superficie', models.IntegerField(blank=True, null=True)),
                ('rendita_lire', models.BigIntegerField(blank=True, null=True)),
                ('rendita_euro', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('lotto', models.CharField(blank=True, max_length=2, null=True)),
                ('edificio', models.CharField(blank=True, max_length=2, null=True)),
                ('scala', models.CharField(blank=True, max_length=2, null=True)),
                ('interno_1', models.CharField(blank=True, max_length=3, null=True)),
                ('interno_2', models.CharField(blank=True, max_length=3, null=True)),
                ('piano_1', models.CharField(blank=True, max_length=4, null=True)),
                ('piano_2', models.CharField(blank=True, max_length=4, null=True)),
                ('piano_3', models.CharField(blank=True, max_length=4, null=True)),
                ('piano_4', models.CharField(blank=True, max_length=4, null=True)),
                ('partita', models.CharField(blank=True, max_length=7, null=True)),
                ('flag_classamento', models.CharField(blank=True, choices=[('1', 'classamento proposto dalla parte'), ('2', "classamento proposto dalla parte e validato dall'ufficio"), ('3', 'classamento automatico(attribuito in sostituzione del classamento proposto)'), ('4', 'classamento rettificato( in sostituzione del classamento proposto)'), ('5', 'classamento proposto divenuto definitivo per decorrenza termini'), (' ', 'residuale su uiu antecedenti DOCFA')], max_length=1, null=True)),
                ('protocollo_notifica', models.CharField(blank=True, max_length=18, null=True)),
                ('data_notifica', models.DateField(blank=True, null=True)),
                ('id_mutazionale_iniziale', models.IntegerField(blank=True, null=True)),
                ('id_mutazionale_finale', models.IntegerField(blank=True, null=True)),
                ('annotazione', models.CharField(blank=True, max_length=200, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('categoria', models.ForeignKey(blank=True, db_column='categoria', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.CategorieCatastali')),
                ('sezione', models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie')),
            ],
            options={
                'db_table': 'unita_immobiliari',
                'verbose_name': 'Unit\xe0 immobiliare',
                'verbose_name_plural': 'Unit\xe0 immobiliari',
            },
        ),
        migrations.CreateModel(
            name='UtilitaComuniUI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_immobile', models.IntegerField()),
                ('progressivo', models.IntegerField(blank=True, null=True)),
                ('codice_comune', models.CharField(blank=True, max_length=4, null=True)),
                ('sezione_urbana', models.CharField(blank=True, max_length=3, null=True)),
                ('foglio', models.CharField(blank=True, max_length=4, null=True)),
                ('numero', models.CharField(blank=True, max_length=5, null=True)),
                ('denominatore', models.IntegerField(blank=True, null=True)),
                ('subalterno', models.CharField(blank=True, max_length=4, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sezione', models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie')),
            ],
            options={
                'db_table': 'utilita_comuni_ui',
                'verbose_name': 'Utilit\xe0 comune UI',
                'verbose_name_plural': 'Utilit\xe0 comuni UI',
            },
        ),
        migrations.AddField(
            model_name='riserveui',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='riserveparticella',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='relazioneuiudocfa',
            name='sezione_uiu',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='relazionefabbricatidocfa',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='porzioniparticella',
            name='qualita',
            field=models.ForeignKey(db_column='qualita', on_delete=django.db.models.deletion.CASCADE, to='cadastre.QualitaTerreni'),
        ),
        migrations.AddField(
            model_name='porzioniparticella',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='particella',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='indirizzi',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='identificativiimmobiliari',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='deduzioniparticella',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='datimdocfa',
            name='sezione_uiu',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
        migrations.AddField(
            model_name='caratteristicheparticella',
            name='qualita',
            field=models.ForeignKey(db_column='qualita', on_delete=django.db.models.deletion.CASCADE, to='cadastre.QualitaTerreni'),
        ),
        migrations.AddField(
            model_name='caratteristicheparticella',
            name='sezione',
            field=models.ForeignKey(blank=True, db_column='sezione', null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastre.SezioniCensuarie'),
        ),
    ]
